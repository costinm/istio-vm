# A-la-carte istio ingress gateway.
# This is a simplified template:
# - will not create a load balancer Service, just a regular one
#   User should maintain the LB in a separate chart or custom
#   k8s config.
# - should be used to install a single gateway. The name of
#   the install used to name the objects.
#
# WIP: remove the 'gateway.' prefix.

# Revision selects a specific istiod control plane.
# This selects the injection template.
# If empty, default istiod will be used.
revision: ""

# ImagePullSecrets for the ServiceAccount, list of secrets in the same namespace
# to use for pulling any images in pods that reference this ServiceAccount.
# For components that don't use ServiceAccounts (i.e. grafana, servicegraph, tracing)
# ImagePullSecrets will be added to the corresponding Deployment(StatefulSet) objects.
# Must be set for any cluster configured with private docker registry.
imagePullSecrets: []
# - private-registry-key

# Custom serviceAccount to use for the deployment.
# If empty and imagePullSecrets is set, a service account with the
# same name with the release will be used. Otherwise, "default" will be used.
serviceAccountName: ""

# Scalability tuning
# replicaCount: 1
rollingMaxSurge: 100%
rollingMaxUnavailable: 25%
autoscaleEnabled: true
autoscaleMin: 1
autoscaleMax: 5

# If set, a PodDisruptionBudget with minAvailable will be created.
#
# This replaces podDisruptionBudget.enabled=true and allows customizing
# the min.
minAvailable: 1

# Deprecated - using custom lables may interfere with automatic
# management.
#    labels:
#      app: istio-ingressgateway
#      istio: ingressgateway

cpu:
  targetAverageUtilization: 80

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 2000m
    memory: 1024Mi

podAnnotations: {}

# Example for enabling debug on the agent and envoy
#podAnnotations:
#  sidecar.istio.io/logLevel: debug
#  sidecar.istio.io/debug: token:debug

nodeSelector: {}
tolerations: []

# Add annotations for prometheus scrapping.
# TODO: is there a common pattern for this ? Should it even be an option ?
enablePrometheusMerge: true

# The injection template to use for the gateway. If not set, no injection will be performed.
injectionTemplate: "gateway"

# Specify the pod anti-affinity that allows you to constrain which nodes
# your pod is eligible to be scheduled based on labels on pods that are
# already running on the node rather than based on labels on nodes.
# There are currently two types of anti-affinity:
#    "requiredDuringSchedulingIgnoredDuringExecution"
#    "preferredDuringSchedulingIgnoredDuringExecution"
# which denote "hard" vs. "soft" requirements, you can define your values
# in "podAntiAffinityLabelSelector" and "podAntiAffinityTermLabelSelector"
# correspondingly.
# For example:
# podAntiAffinityLabelSelector:
# - key: security
#   operator: In
#   values: S1,S2
#   topologyKey: "kubernetes.io/hostname"
# This pod anti-affinity rule says that the pod requires not to be scheduled
# onto a node if that node is already running a pod with label having key
# "security" and value "S1".
podAntiAffinityLabelSelector: []
podAntiAffinityTermLabelSelector: []

# Kubernetes >=v1.11.0 will create two PriorityClass, including system-cluster-critical and
# system-node-critical, it is better to configure this in order to make sure your Istio pods
# will not be killed because of low priority class.
# Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
# for more detail.
priorityClassName: ""

# Default node tolerations to be applied to all deployments so that all pods can be
# scheduled to a particular nodes with matching taints. Each component can overwrite
# these default values by adding its tolerations block in the relevant section below
# and setting the desired values.
# Configure this field in case that all pods of Istio control plane are expected to
# be scheduled to particular nodes with specified taints.
defaultTolerations: []


# Specify image pull policy if default behavior isn't desired.
# Default behavior: latest images will be Always else IfNotPresent.
imagePullPolicy: ""

# Default image - will be replaced by injection.
# The helm template also works without injection.
image: auto

# Default hub for Istio images.
# Releases are published to docker hub under 'istio' project.
# Dev builds from prow are on gcr.io
hub: gcr.io/istio-testing

# Default tag for Istio images.
tag: latest

# A gateway with this mode ensures that pilot generates an additional
# set of clusters for internal services but without Istio mTLS, to
# enable cross cluster routing.
#
# Setting this mode to sni-dnat adds the clusters required for AUTO_PASSTHROUGH
routerMode: standard

# Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:
#   0 - Never scheduled
#   1 - Least preferred
#   2 - No preference
#   3 - Most preferred
arch:
  amd64: 2
  s390x: 2
  ppc64le: 2

#gateways:
#  istio-ingressgateway:
    # Deprecated, using Release.Name
    # name: istio-ingressgateway
    # Deprecated, customService: ports:
    ## You can add custom gateway ports in user values overrides, but it must include those ports since helm replaces.
    # Note that AWS ELB will by default perform health checks on the first port
    # on this list. Setting this to the health check port will ensure that health
    # checks always work. https://github.com/istio/istio/issues/12503
#    - port: 15021
#      targetPort: 15021
#      name: status-port
#      protocol: TCP
#    - port: 80
#      targetPort: 8080
#      name: http2
#      protocol: TCP
#    - port: 443
#      targetPort: 8443
#      name: https
#      protocol: TCP


    # Deprecated, customService: loadBalancerIP: ""
    # Deprecated, customService: loadBalancerSourceRanges: []
    # Deprecated, customService: serviceAnnotations: {}

    # Enable cross-cluster access using SNI matching
    # No longer used
#    zvpn:
#      enabled: false
#      suffix: global

    # To generate an internal load balancer:
    # --set serviceAnnotations.cloud.google.com/load-balancer-type=internal
    #serviceAnnotations:
    #    cloud.google.com/load-balancer-type: "internal"

    # Deprecated, customService: type: LoadBalancer #change to NodePort, ClusterIP or LoadBalancer if need be

    ##############
    # Deprecated - using SDS by default.
    # Use post-render: kustomize to add volumes
#    secretVolumes:
#    - name: ingressgateway-certs
#      secretName: istio-ingressgateway-certs
#      mountPath: /etc/istio/ingressgateway-certs
#    - name: ingressgateway-ca-certs
#      secretName: istio-ingressgateway-ca-certs
#      mountPath: /etc/istio/ingressgateway-ca-certs

    # customService disables the creation of a LB service.
    # Users should manually create it, so they have full control.
    #customService: true

    # Deprecated, customService: externalTrafficPolicy: ""

    # Deprecated, customService: ingressPorts: []

    # Deprecated, use post-render: additionalContainers: []
    # Deprecated, use post-render: configVolumes: []

    ### Advanced options ############
#    env:
#      ISTIO_META_ROUTER_MODE: "standard"


    # whether to run the gateway in a privileged container
    # Deprecated - this chart doesn't support runAsRoot
    # runAsRoot: false



# For Helm compatibility.
# ownerName: ""

#global:
#  # set the default set of namespaces to which services, service entries, virtual services, destination
#  # rules should be exported to. Currently only one value can be provided in this list. This value
#  # should be one of the following two options:
#  # * implies these objects are visible to all namespaces, enabling any sidecar to talk to any other sidecar.
#  # . implies these objects are visible to only to sidecars in the same namespace, or if imported as a Sidecar.egress.host
#  defaultConfigVisibilitySettings: []
#
#  # Default node selector to be applied to all deployments so that all pods can be
#  # constrained to run a particular nodes. Each component can overwrite these default
#  # values by adding its node selector block in the relevant section below and setting
#  # the desired values.
#  defaultNodeSelector: {}
#
#  # enable pod disruption budget for the control plane, which is used to
#  # ensure Istio control plane components are gradually upgraded or recovered.
#  defaultPodDisruptionBudget:
#    enabled: true
#
#  # A minimal set of requested resources to applied to all deployments so that
#  # Horizontal Pod Autoscaler will be able to function (if set).
#  # Each component can overwrite these default values by adding its own resources
#  # block in the relevant section below and setting the desired resources values.
#  defaultResources:
#    requests:
#      cpu: 10m
#    #   memory: 128Mi
#    # limits:
#    #   cpu: 100m
#    #   memory: 128Mi


#  # To output all istio components logs in json format by adding --log_as_json argument to each container argument
#  logAsJson: false
#
#
#  # Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
#  # The control plane has different scopes depending on component, but can configure default log level across all components
#  # If empty, default scope and level will be used as configured in code
#  logging:
#    level: "default:info"

