  {{ if .Values.dnsProject}}
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: acme-dns
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    # This will register an issuer with LetsEncrypt.  Replace
    # with your admin email address.
    email: {{ .Values.email }}
    privateKeySecretRef:
      name: letsencrypt
    solvers:
      - dns01:
          clouddns:
            # Set this to your GCP project-id
            project: {{ .Values.dnsProject }}
            # Set this to the secret that we publish our service account key
            # in the previous step.
            serviceAccountSecretRef:
              name: clouddns-dns01-solver-svc-acct
              key: key.json
---
  {{ end}}

apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: acme
spec:
  acme:
    email: {{ .Values.email }}
    privateKeySecretRef:
      name: letsencrypt
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
      - http01:
          ingress:
            class: istio



  # kubectl edit cm config-domain --namespace knative-serving
  # cr.webinf.info: ""

  #kubectl edit configmap config-network --namespace knative-serving
  #  autoTLS: Enabled

  #kubectl apply -f https://raw.githubusercontent.com/knative/docs/master/docs/serving/autoscaling/autoscale-go/service.yaml
  # kubectl get service.serving.knative.dev -A

  #kubectl apply --filename https://github.com/knative/net-certmanager/releases/download/v0.20.0/release.yaml


  # Automatic doesn't seem to work - probably ingress class issues
  # kubectl delete --filename https://github.com/knative/net-certmanager/releases/download/v0.20.0/release.yaml
  # kubectl edit configmap config-certmanager --namespace knative-serving
