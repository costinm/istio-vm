---
# The Service is auto-created if it doesn't exist - or is patched if it exists.
apiVersion: v1
kind: Service
metadata:
  annotations:
    test2: fromyaml
  labels:
    gateway.istio.io/managed: istio.io-gateway-controller
    istio: ingressgateway
  name: gateway
  namespace: session
  # owner not set - means if Gateway is deleted, the Service IP is preserved
spec:
  #externalTrafficPolicy: Cluster
  #internalTrafficPolicy: Cluster
  selector:
    istio.io/gateway-name: gateway
  sessionAffinity: None
  type: LoadBalancer
  ports:
    - name: http
      port: 8080
---
# Deployment is also auto-created
# This allows customizations - the pods are injected and 'auto' is replaced.
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    fromyaml: test1
  labels:
    gateway.istio.io/managed: istio.io-gateway-controller
    istio: ingressgateway
  name: gateway
  namespace: session
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      istio.io/gateway-name: gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
        test: test1
      labels:
        istio: ingressgateway
        istio.io/gateway-name: gateway
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - image: auto
          imagePullPolicy: Always
          name: istio-proxy
          ports:
            - containerPort: 15021
              name: status-port
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
      terminationGracePeriodSeconds: 30
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: gateway
  namespace: session
  annotations:
    # labels and annotations added to both Service and Deployment
    test: test1
    #networking.istio.io/service-type: LoadBalancer
  labels:
    # To make this consistent with istio
    istio: ingressgateway

spec:
  gatewayClassName: istio
  listeners:
    # Creating a second Gateway will result in 2 deployments ( and service, LB, address, etc)
    - name: default
      port: 8080
      protocol: HTTP
      allowedRoutes:
        namespaces:
          #from: All
          from: Selector
          selector:
            matchLabels:
              # This label is added automatically as of K8s 1.22
              # to all namespaces
              kubernetes.io/metadata.name: session
    - name: grpc
      port: 8081
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: Selector
          selector:
            matchLabels:
              kubernetes.io/metadata.name: session
