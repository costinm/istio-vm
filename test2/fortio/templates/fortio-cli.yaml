## Fortio clients generating traffic on different components.
# Generally use the ingress gateway - to capture non-istio service as well.
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cli-fortio
  namespace: {{ .Release.Namespace }}
  labels:
    release: {{ .Release.Name }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cli-fortio
        version: v1
      annotations:
        sidecar.istio.io/debug: "{{ .Values.debug }}"
        #sidecar.istio.io/discoveryAddress: "istio-pilot.{{ .Values.pilotns }}:15010"
    spec:
      containers:
      - name: echosrv
        image: costinm/fortio:latest
        imagePullPolicy: Always
        args:
          - load
          - -t
          - "0"
          - -c
          - "30"
          - -qps
          - "{{ .Values.qps }}"
          - http://fortio:8080/echo?size=5000
        resources:
          requests:
            cpu: 200m
            memory: "1G"
          limits:
            cpu: 800m
            memory: "1G"
#      - name: app
#        image: istionightly/app:nightly-release-1.0
#        imagePullPolicy: IfNotPresent
#        args:
#        - --port
#        - "8082"
#        - --port
#        - "80"
#        - --port
#        - "9090"
#        - --port
#        - "90"
#        - --grpc
#        - "7070"
#        - --grpc
#        - "70"
#        - --port
#        - "10090"
#        - --port
#        - "19090"
#        - --port
#        - "3333"
#        - --version
#        - "v1"
#        ports:
#        - containerPort: 8082
#        - containerPort: 80
#        - containerPort: 9090
#        - containerPort: 90
#        - containerPort: 10090
#        - containerPort: 19090
#        - name: tcp-health-port
#          containerPort: 3333
#        securityContext:
#          capabilities:
#            add:
#            - NET_ADMIN
#        livenessProbe:
#          httpGet:
#            path: /healthz
#            port: 3333
#          initialDelaySeconds: 10
#          periodSeconds: 10
#          failureThreshold: 10
#        readinessProbe:
#          tcpSocket:
#            port: tcp-health-port
#          initialDelaySeconds: 10
#          periodSeconds: 10
#          failureThreshold: 10
